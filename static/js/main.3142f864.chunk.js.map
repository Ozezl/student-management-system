{"version":3,"sources":["component/Buttons/Buttons.js","component/Modal/Modal.js","component/Table/Table.js","component/Body/Body.js","component/Logo/Logo.js","component/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","props","className","cssModule","styles","type","size","onPress","createHandler","deleteHandler","updateHandler","Modal","modalClassName","showModal","onClick","for","name","id","onChange","e","setId","target","value","httpDeleteHandler","setFirstName","setLastName","setSemester","setFaculty","setEmail","httpPutHandler","httpPostHandler","Table","data","items","plugins","LocalPlugin","title","Body","URL","useState","setItems","isLoading","setIsLoading","setShowModal","firstName","lastName","semester","faculty","email","setNull","useEffect","fetch","then","res","json","result","Swal","fire","icon","text","method","headers","response","alert","window","location","reload","body","Number","requestOptions","JSON","stringify","console","log","Logo","Header","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3142f864.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AwesomeButton } from \"react-awesome-button\"\r\nimport './Buttons.css'\r\nimport styles from \"react-awesome-button/src/styles/themes/theme-red\"\r\n\r\nfunction Buttons(props) {\r\n  return (\r\n    <div className=\"buttons\">\r\n        <AwesomeButton  cssModule={styles} type=\"primary\" size=\"large\" onPress={() => props.createHandler()}>\r\n            Add Student\r\n        </AwesomeButton>\r\n\r\n        <AwesomeButton  cssModule={styles} type=\"primary\" size=\"large\" onPress={() => props.deleteHandler()}>\r\n            Delete Student\r\n        </AwesomeButton>\r\n\r\n        <AwesomeButton  cssModule={styles} type=\"primary\" size=\"large\" onPress={() => props.updateHandler()}>\r\n            Update Student\r\n        </AwesomeButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons","import React from 'react'\r\nimport { AwesomeButton } from \"react-awesome-button\"\r\nimport './Modal.css'\r\nimport \"react-awesome-button/dist/styles.css\"\r\n\r\nfunction Modal(props) {\r\n    const modalClassName = props.showModal > 0 ? \"modal\" : \"modalOff\"\r\n\r\n    return (\r\n    <div className={modalClassName}>\r\n        {\r\n            props.showModal === 1 ?\r\n                <div className=\"modal1-wrapper-box\">\r\n                    <div className=\"button-close\" onClick={() => props.deleteHandler()}>+</div>\r\n                    \r\n                        <label for=\"id\">ID</label>\r\n                        <input name=\"id\" id=\"id\" type=\"number\" onChange={e => props.setId(e.target.value)}/>\r\n                        <AwesomeButton  type=\"secondary\" size=\"small\" onPress={() => props.httpDeleteHandler()}>\r\n                            Delete\r\n                        </AwesomeButton>\r\n \r\n                  \r\n                </div>\r\n            :\r\n            <div></div>\r\n        }\r\n        {\r\n            props.showModal === 2 ?\r\n            \r\n                <div className=\"modal2-wrapper-box\">\r\n                    <div className=\"button-close\" onClick={() => props.updateHandler()}>+</div>\r\n                  \r\n                        <label for=\"id\">ID</label>\r\n                        <input name=\"id\" id=\"id\" type=\"number\" onChange={e => props.setId(e.target.value)}/>\r\n                        <label for=\"firstName\">First name</label>\r\n                        <input name=\"firstName\" id=\"firstName\" onChange={e => props.setFirstName(e.target.value)}/>\r\n                        <label for=\"lastName\">Last name</label>\r\n                        <input name=\"lastName\" id=\"lastName\"  onChange={e => props.setLastName(e.target.value)}/>\r\n                        <label for=\"semester\">Semester</label>\r\n                        <input name=\"semester\" id=\"semseter\" type=\"number\" onChange={e => props.setSemester(e.target.value)}/>\r\n                        <label for=\"faculty\">Faculty</label>\r\n                        <input name=\"faculty\" id=\"faculty\" onChange={e => props.setFaculty(e.target.value)}/>\r\n                        <label for=\"email\">Email</label>\r\n                        <input name=\"email\" id=\"email\"  onChange={e => props.setEmail(e.target.value)}/>\r\n                        <AwesomeButton  type=\"secondary\" size=\"small\" onPress={() => props.httpPutHandler()}>\r\n                            Update\r\n                        </AwesomeButton>\r\n                     \r\n                </div>\r\n            :\r\n            <div></div>\r\n        }\r\n        {\r\n            props.showModal === 3 ?\r\n            \r\n                <div className=\"modal3-wrapper-box\">\r\n                    <div className=\"button-close\" onClick={() => props.createHandler()}>+</div>\r\n                    \r\n                        <label for=\"firstName\">First name</label>\r\n                        <input name=\"firstName\" id=\"firstName\" onChange={e => props.setFirstName(e.target.value)}/>\r\n                        <label for=\"lastName\">Last name</label>\r\n                        <input name=\"lastName\" id=\"lastName\"  onChange={e => props.setLastName(e.target.value)}/>\r\n                        <label for=\"semester\">Semester</label>\r\n                        <input name=\"semester\" id=\"semseter\" type=\"number\" onChange={e => props.setSemester(e.target.value)}/>\r\n                        <label for=\"faculty\">Faculty</label>\r\n                        <input name=\"faculty\" id=\"faculty\" onChange={e => props.setFaculty(e.target.value)}/>\r\n                        <label for=\"email\">Email</label>\r\n                        <input name=\"email\" id=\"email\"  onChange={e => props.setEmail(e.target.value)}/>\r\n                        <AwesomeButton  type=\"secondary\" size=\"small\" onPress={() => props.httpPostHandler()}>\r\n                            Add \r\n                        </AwesomeButton>\r\n                     \r\n                </div>\r\n            :\r\n            <div></div>\r\n        }   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport Griddle, { plugins, RowDefinition, ColumnDefinition} from 'griddle-react';\r\nimport './Table.css'\r\n\r\n\r\nfunction Table(props) {\r\n  return (\r\n    <div className=\"table\">\r\n        <Griddle\r\n            data = {props.items}\r\n            plugins = {[plugins.LocalPlugin]}\r\n        >\r\n            <RowDefinition>\r\n                <ColumnDefinition id=\"id\" title=\"ID\" />\r\n                <ColumnDefinition id=\"firstName\" title=\"First Name\" />\r\n                <ColumnDefinition id=\"lastName\" title=\"Last Name\"/>\r\n                <ColumnDefinition id=\"semester\" title=\"Semester\"/>\r\n                <ColumnDefinition id=\"faculty\" title=\"Faculty\"/>\r\n                <ColumnDefinition id=\"email\" title=\"Email\"/>\r\n            </RowDefinition>\r\n        </Griddle>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table","import React from 'react'\r\nimport {useEffect} from 'react'\r\nimport {useState} from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport Buttons from '../Buttons/Buttons'\r\nimport Modal from '../Modal/Modal'\r\nimport Table from '../Table/Table'\r\nimport './Body.css'\r\n\r\nfunction Body() {\r\n    const URL = 'https://salty-reaches-26979.herokuapp.com/students/'\r\n\r\n    const [items, setItems] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [showModal, setShowModal] = useState(0); //takes values from 0 to 3\r\n    const [id, setId] = useState()\r\n    const [firstName, setFirstName] = useState()\r\n    const [lastName, setLastName] = useState()\r\n    const [semester, setSemester] = useState()\r\n    const [faculty, setFaculty] = useState()\r\n    const [email, setEmail] = useState()\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(URL)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setItems(result)\r\n                setIsLoading(false)\r\n            },\r\n            (e) => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!' + e,\r\n                  })\r\n            })\r\n    }, [])\r\n\r\n    function setNull() {\r\n        setId('')\r\n        setFirstName('')\r\n        setLastName('')\r\n        setSemester('')\r\n        setFaculty('')\r\n        setEmail('')\r\n    }\r\n\r\n    function deleteHandler() {\r\n        showModal === 0 ? setShowModal(1) : setShowModal(0)\r\n    }\r\n\r\n    function updateHandler() {\r\n        showModal === 0 ? setShowModal(2) : setShowModal(0)\r\n    }\r\n\r\n    function createHandler() {\r\n        showModal === 0 ? setShowModal(3) : setShowModal(0)\r\n    }\r\n\r\n    function httpPostHandler() {\r\n        let body = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            semester: Number(semester),\r\n            faculty: faculty,\r\n            email: email\r\n        }\r\n\r\n        setNull()\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        fetch(URL, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data), \r\n              (e) => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!' + e,\r\n                  })\r\n              })\r\n\r\n        window.location.reload()    //hard reaload, temp fix for form autosubmit\r\n    }\r\n\r\n    function httpDeleteHandler() {\r\n        const requestOptions = {\r\n            method: 'delete',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        fetch(URL + id, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => alert(data),\r\n            (e) => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!' + e,\r\n                  })\r\n            })\r\n\r\n        setNull()\r\n\r\n        window.location.reload()\r\n    }\r\n\r\n    function httpPutHandler() {\r\n        let body = {\r\n            id: Number(id),\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            semester: Number(semester),\r\n            faculty: faculty,\r\n            email: email\r\n        }\r\n\r\n        setNull()\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        fetch(URL + id, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n\r\n        window.location.reload()    \r\n    }\r\n\r\n  return (\r\n    <div className = \"body\">\r\n        \r\n        {\r\n        isLoading ?\r\n        <div className=\"body-placeholder\">Is loading...</div>\r\n        :\r\n        <div className = \"body-wrapper\">\r\n            <Table \r\n                items={items}\r\n            />\r\n            <div className=\"body-wrapper-buttons\">\r\n                <Buttons \r\n                    createHandler = {() => createHandler()}\r\n                    deleteHandler = {() => deleteHandler()}\r\n                    updateHandler = {() => updateHandler()}\r\n                />\r\n            </div>\r\n        </div>\r\n        }\r\n        \r\n        <Modal\r\n            showModal = {showModal}\r\n            deleteHandler = {() => deleteHandler()}\r\n            updateHandler = {() => updateHandler()}\r\n            createHandler = {() => createHandler()}\r\n            httpDeleteHandler = {() => httpDeleteHandler()}\r\n            httpPutHandler = {() => httpPutHandler()}\r\n            httpPostHandler = {() => httpPostHandler()}\r\n            setId = {(id) => setId(id)}\r\n            setFirstName = {(firstName) => setFirstName(firstName)}\r\n            setLastName = {(lastName) => setLastName(lastName)}\r\n            setSemester = {(semester) => setSemester(semester)}\r\n            setFaculty = {(faculty) => setFaculty(faculty)}\r\n            setEmail = {(email) => setEmail(email)}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body\r\n","import React from 'react'\r\nimport './Logo.css'\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"logo\">\r\n        <div className=\"logo-placeholder\">Student MA</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\nimport './Header.css'\r\nimport Logo from '../Logo/Logo'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n        <Logo/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport './App.css'\nimport Body from './component/Body/Body'\nimport Header from './component/Header/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Body></Body>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}